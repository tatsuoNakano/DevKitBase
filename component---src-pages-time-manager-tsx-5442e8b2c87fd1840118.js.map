{"version":3,"file":"component---src-pages-time-manager-tsx-5442e8b2c87fd1840118.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/ButtonGroup.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/ProgressBar.js","webpack://gatsby-starter-default/./src/components/TimeManager/PomodoroTimer.tsx","webpack://gatsby-starter-default/./src/components/TimeManager/PieChart.tsx","webpack://gatsby-starter-default/./src/components/TimeManager/WorkTimer.tsx","webpack://gatsby-starter-default/./src/pages/time-manager.tsx","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/Container.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical = false,\n  className,\n  role = 'group',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, {\n    ...rest,\n    ref: ref,\n    role: role,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nexport default ButtonGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  ...rest\n}, ref) => {\n  const props = {\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false,\n    ...rest\n  };\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Button, Form, ProgressBar } from \"react-bootstrap\";\r\n\r\nconst STORAGE_KEY = \"pomodoro-timer\";\r\n\r\nconst PomodoroTimer: React.FC = () => {\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [totalSeconds, setTotalSeconds] = useState(0);\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const [isPaused, setIsPaused] = useState(false);\r\n    const [completedSessions, setCompletedSessions] = useState(0);\r\n    const [dropdownVisible, setDropdownVisible] = useState(false);\r\n\r\n    const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n    const notifyLabelRef = useRef<string>(\"\");\r\n\r\n    const formatTime = (sec: number) =>\r\n        `${String(Math.floor(sec / 60)).padStart(2, \"0\")}:${String(sec % 60).padStart(2, \"0\")}`;\r\n\r\n    const updateProgress = () => {\r\n        if (!totalSeconds) return 0;\r\n        return ((totalSeconds - seconds) / totalSeconds) * 100;\r\n    };\r\n\r\n    const notifyUser = (label: string) => {\r\n        if ((window as any).safeAPI) {\r\n            (window as any).safeAPI.notify(label, \"時間になりました！\");\r\n        }\r\n        if (\"Notification\" in window) {\r\n            if (Notification.permission === \"granted\") {\r\n                new Notification(label, {\r\n                    body: \"時間になりました！\",\r\n                    icon: \"assets/icon.png\",\r\n                });\r\n            } else {\r\n                Notification.requestPermission().then((perm) => {\r\n                    if (perm === \"granted\") {\r\n                        new Notification(label, {\r\n                            body: \"時間になりました！\",\r\n                            icon: \"assets/icon.png\",\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        alert(\"時間です！\");\r\n    };\r\n\r\n    const saveToStorage = (data: any) => {\r\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\r\n    };\r\n\r\n    const startInterval = () => {\r\n        if (intervalRef.current) clearInterval(intervalRef.current);\r\n        intervalRef.current = setInterval(() => {\r\n            setSeconds((prev) => {\r\n                const next = prev - 1;\r\n                if (next <= 0) {\r\n                    clearInterval(intervalRef.current!);\r\n                    setIsRunning(false);\r\n                    notifyUser(notifyLabelRef.current);\r\n                    if (notifyLabelRef.current === \"Pomodoro 完了\") {\r\n                        setCompletedSessions((c) => Math.min(c + 1, 12));\r\n                    }\r\n                    localStorage.removeItem(STORAGE_KEY);\r\n                    return 0;\r\n                }\r\n                return next;\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    const initializeTimer = (duration: number, label: string) => {\r\n        const startedAt = Date.now();\r\n        setSeconds(duration);\r\n        setTotalSeconds(duration);\r\n        setIsRunning(true);\r\n        setIsPaused(false);\r\n        notifyLabelRef.current = label;\r\n\r\n        saveToStorage({\r\n            startedAt,\r\n            totalSeconds: duration,\r\n            isPaused: false,\r\n            isRunning: true,\r\n            label,\r\n            completedSessions,\r\n        });\r\n\r\n        startInterval();\r\n    };\r\n\r\n    const handleStart = () => {\r\n        const minutes = parseInt(\r\n            (document.getElementById(\"work-minutes\") as HTMLInputElement)?.value || \"25\"\r\n        );\r\n        if (!isNaN(minutes)) {\r\n            initializeTimer(minutes * 60, \"Pomodoro 完了\");\r\n        }\r\n    };\r\n\r\n    const handleBreak = () => {\r\n        initializeTimer(5 * 60, \"休憩終了\");\r\n    };\r\n\r\n    const handlePause = () => {\r\n        if (!isRunning) return;\r\n        setIsPaused((prev) => {\r\n            const newPaused = !prev;\r\n            if (newPaused) {\r\n                if (intervalRef.current) clearInterval(intervalRef.current);\r\n            } else {\r\n                const startedAt = Date.now() - (totalSeconds - seconds) * 1000;\r\n                saveToStorage({\r\n                    startedAt,\r\n                    totalSeconds,\r\n                    isPaused: false,\r\n                    isRunning,\r\n                    label: notifyLabelRef.current,\r\n                    completedSessions,\r\n                });\r\n                startInterval();\r\n            }\r\n            return newPaused;\r\n        });\r\n    };\r\n\r\n    const restoreFromStorage = () => {\r\n        const saved = localStorage.getItem(STORAGE_KEY);\r\n        if (!saved) return;\r\n        const {\r\n            startedAt,\r\n            totalSeconds,\r\n            isPaused,\r\n            isRunning,\r\n            label,\r\n            completedSessions,\r\n        } = JSON.parse(saved);\r\n\r\n        const elapsed = Math.floor((Date.now() - startedAt) / 1000);\r\n        const remaining = Math.max(totalSeconds - elapsed, 0);\r\n\r\n        setSeconds(remaining);\r\n        setTotalSeconds(totalSeconds);\r\n        setIsPaused(isPaused);\r\n        setIsRunning(isRunning);\r\n        setCompletedSessions(completedSessions || 0);\r\n        notifyLabelRef.current = label;\r\n\r\n        if (isRunning && !isPaused && remaining > 0) {\r\n            startInterval();\r\n        }\r\n    };\r\n\r\n    const handleDropdownToggle = () => {\r\n        setDropdownVisible((prev) => !prev);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const closeDropdown = (e: MouseEvent) => {\r\n            const target = e.target as HTMLElement;\r\n            if (!target.closest(\".dropdown-button\")) {\r\n                setDropdownVisible(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"click\", closeDropdown);\r\n        return () => document.removeEventListener(\"click\", closeDropdown);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        restoreFromStorage();\r\n        return () => {\r\n            if (intervalRef.current) clearInterval(intervalRef.current);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Form.Group controlId=\"work-minutes\">\r\n                <Form.Label>作業時間（分）</Form.Label>\r\n                <Form.Control\r\n                    type=\"number\"\r\n                    defaultValue={25}\r\n                    className=\"bg-dark text-light border-info fs-3\"\r\n                />\r\n            </Form.Group>\r\n\r\n            <h3 className=\"mt-3 fs-1 text-light\" id=\"timer-display\">\r\n                {formatTime(seconds)}\r\n            </h3>\r\n\r\n            <ProgressBar\r\n                now={updateProgress()}\r\n                variant=\"info\"\r\n                className=\"mb-3\"\r\n                id=\"progress-bar\"\r\n            />\r\n\r\n            <div className=\"d-flex gap-2\">\r\n                <Button id=\"start-timer\" variant=\"outline-light\" onClick={handleStart}>\r\n                    ▶ 作業開始\r\n                </Button>\r\n                <Button id=\"break-timer\" variant=\"outline-light\" onClick={handleBreak}>\r\n                    休憩\r\n                </Button>\r\n                <Button\r\n                    id=\"stop-timer\"\r\n                    variant=\"outline-light\"\r\n                    onClick={handlePause}\r\n                >\r\n                    {isPaused ? \"▶ 再開\" : \"一時停止\"}\r\n                </Button>\r\n            </div>\r\n\r\n            <div id=\"indicator-container\" className=\"mt-3\">\r\n                {[...Array(12)].map((_, i) => (\r\n                    <span\r\n                        key={i}\r\n                        className=\"dot mx-1\"\r\n                        style={{\r\n                            display: \"inline-block\",\r\n                            width: 10,\r\n                            height: 10,\r\n                            borderRadius: \"50%\",\r\n                            backgroundColor: i < completedSessions ? \"#0dcaf0\" : \"#6c757d\",\r\n                        }}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PomodoroTimer;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\ninterface Props {\r\n    workSeconds: number;\r\n    breakSeconds: number;\r\n}\r\n\r\nconst PieChart: React.FC<Props> = ({ workSeconds, breakSeconds }) => {\r\n    const svgRef = useRef<SVGSVGElement | null>(null);\r\n    const totalSeconds = 86400; // 24時間 = 60 * 60 * 24\r\n    const otherSeconds = Math.max(0, totalSeconds - workSeconds - breakSeconds);\r\n\r\n    const data = [\r\n        { label: \"作業時間\", value: workSeconds, color: \"#0d6efd\" }, // Bootstrap Blue\r\n        { label: \"休憩時間\", value: breakSeconds, color: \"#20c997\" }, // Bootstrap Teal\r\n        { label: \"その他\", value: otherSeconds, color: \"#6c757d\" },   // Bootstrap Gray\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const svg = d3.select(svgRef.current);\r\n        svg.selectAll(\"*\").remove(); // 初期化\r\n\r\n        const width = 320;\r\n        const height = 320;\r\n        const radius = Math.min(width, height) / 2 - 10;\r\n\r\n        const pie = d3\r\n            .pie<{ label: string; value: number }>()\r\n            .value((d) => d.value)\r\n            .sort(null);\r\n\r\n        const arc = d3\r\n            .arc<d3.PieArcDatum<{ label: string; value: number }>>()\r\n            .innerRadius(60)\r\n            .outerRadius(radius);\r\n\r\n        const g = svg\r\n            .append(\"g\")\r\n            .attr(\"transform\", `translate(${width / 2},${height / 2})`);\r\n\r\n        g.selectAll(\"path\")\r\n            .data(pie(data))\r\n            .enter()\r\n            .append(\"path\")\r\n            .attr(\"d\", arc as any)\r\n            .attr(\"fill\", (d, i) => data[i].color)\r\n            .attr(\"stroke\", \"#111\")\r\n            .attr(\"stroke-width\", \"1\");\r\n\r\n        // ラベル\r\n        g.selectAll(\"text\")\r\n            .data(pie(data))\r\n            .enter()\r\n            .append(\"text\")\r\n            .attr(\"transform\", d => `translate(${arc.centroid(d)})`)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr(\"fill\", \"#fff\")\r\n            .attr(\"font-size\", \"10px\")\r\n            .text(d => `${d.data.label}`);\r\n\r\n    }, [workSeconds, breakSeconds]);\r\n\r\n    return (\r\n        <svg ref={svgRef} width={320} height={320} />\r\n    );\r\n};\r\n\r\nexport default PieChart;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Button, ButtonGroup } from \"react-bootstrap\";\r\nimport PieChart from \"./PieChart\";\r\n\r\ntype Mode = \"work\" | \"break\" | null;\r\n\r\ninterface DailyTime {\r\n    work: number;\r\n    break: number;\r\n}\r\n\r\ninterface StoredState {\r\n    isRunning: boolean;\r\n    mode: Mode;\r\n    startedAt: number | null;\r\n    work: number;\r\n    break: number;\r\n}\r\n\r\nconst getTodayKey = () => {\r\n    const now = new Date();\r\n    return now.toISOString().split(\"T\")[0];\r\n};\r\n\r\nconst WorkTimer: React.FC = () => {\r\n    const [mode, setMode] = useState<Mode>(null);\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const [dailyTime, setDailyTime] = useState<DailyTime>({ work: 0, break: 0 });\r\n\r\n    const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n    // 初期読み込みと復元\r\n    useEffect(() => {\r\n        const key = `worktimer-${getTodayKey()}`;\r\n        const saved = localStorage.getItem(key);\r\n        if (saved) {\r\n            const parsed: StoredState = JSON.parse(saved);\r\n            const now = Date.now();\r\n\r\n            let additional = 0;\r\n            if (parsed.isRunning && parsed.startedAt) {\r\n                additional = Math.floor((now - parsed.startedAt) / 1000);\r\n            }\r\n\r\n            const updated = {\r\n                work: parsed.work + (parsed.mode === \"work\" ? additional : 0),\r\n                break: parsed.break + (parsed.mode === \"break\" ? additional : 0),\r\n            };\r\n\r\n            setDailyTime(updated);\r\n            setIsRunning(parsed.isRunning);\r\n            setMode(parsed.mode);\r\n        }\r\n    }, []);\r\n\r\n    // タイマー実行\r\n    useEffect(() => {\r\n        if (isRunning && mode) {\r\n            intervalRef.current = setInterval(() => {\r\n                setDailyTime((prev) => {\r\n                    const updated = {\r\n                        ...prev,\r\n                        [mode]: prev[mode] + 1,\r\n                    };\r\n\r\n                    localStorage.setItem(`worktimer-${getTodayKey()}`, JSON.stringify({\r\n                        isRunning: true,\r\n                        mode: mode,\r\n                        startedAt: Date.now(),\r\n                        work: updated.work,\r\n                        break: updated.break,\r\n                    }));\r\n\r\n                    return updated;\r\n                });\r\n            }, 1000);\r\n        } else {\r\n            if (intervalRef.current) clearInterval(intervalRef.current);\r\n        }\r\n\r\n        return () => {\r\n            if (intervalRef.current) clearInterval(intervalRef.current);\r\n        };\r\n    }, [isRunning, mode]);\r\n\r\n    const startTimer = (newMode: Mode) => {\r\n        setMode(newMode);\r\n        setIsRunning(true);\r\n\r\n        localStorage.setItem(`worktimer-${getTodayKey()}`, JSON.stringify({\r\n            isRunning: true,\r\n            mode: newMode,\r\n            startedAt: Date.now(),\r\n            work: dailyTime.work,\r\n            break: dailyTime.break,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center bg-dark text-white\">\r\n            <div className=\"text-center py-4\">\r\n                <h5 className=\"mb-3\">今日の作業タイマー</h5>\r\n\r\n                <ButtonGroup className=\"mb-3\">\r\n                    <Button\r\n                        variant={mode === \"work\" ? \"primary\" : \"outline-light\"}\r\n                        onClick={() => startTimer(\"work\")}\r\n                    >\r\n                        作業開始\r\n                    </Button>\r\n                    <Button\r\n                        variant={mode === \"break\" ? \"success\" : \"outline-light\"}\r\n                        onClick={() => startTimer(\"break\")}\r\n                    >\r\n                        休憩開始\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outline-light\"\r\n                        onClick={() => setIsRunning(!isRunning)}\r\n                    >\r\n                        {isRunning ? \"一時停止\" : \"再開\"}\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"outline-light\"\r\n                        onClick={() => {\r\n                            setIsRunning(false);\r\n                            setMode(null);\r\n                            localStorage.setItem(`worktimer-${getTodayKey()}`, JSON.stringify({\r\n                                isRunning: false,\r\n                                mode: null,\r\n                                startedAt: null,\r\n                                work: dailyTime.work,\r\n                                break: dailyTime.break,\r\n                            }));\r\n                        }}\r\n                    >\r\n                        停止\r\n                    </Button>\r\n                </ButtonGroup>\r\n\r\n                <div className=\"mb-3\">\r\n                    <p className=\"fs-1 mb-1\">作業時間: {(dailyTime.work / 60).toFixed(1)} 分</p>\r\n                    <p className=\"fs-1\">休憩時間: {(dailyTime.break / 60).toFixed(1)} 分</p>\r\n                </div>\r\n\r\n                <PieChart\r\n                    workSeconds={dailyTime.work}\r\n                    breakSeconds={dailyTime.break}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WorkTimer;\r\n","// /src/pages/time-manager.tsx\r\nimport React from \"react\"\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\nimport Layout from \"../components/Common/Layout\"\r\nimport PomodoroTimer from \"../components/TimeManager/PomodoroTimer\";\r\nimport WorkTimer from \"../components/TimeManager/WorkTimer\";\r\nimport PieChart from \"../components/TimeManager/PieChart\";\r\n// ここに PomodoroTimer, WorkTimer, PieChart, BarChart を import（仮名）\r\n\r\nconst TimeManager: React.FC = () => {\r\n    return (\r\n        <Layout>\r\n            <Container fluid className=\"text-light py-4\">\r\n                <Row>\r\n                    {/* Left Column: タイマーエリア */}\r\n                    <Col md={6} className=\"mb-4\">\r\n                        <div className=\"bg-dark p-3 rounded shadow\">\r\n\r\n                            <h4 className=\" mb-3\">作業タイマー</h4>\r\n                             <WorkTimer />\r\n                        </div>\r\n                    </Col>\r\n\r\n                    {/* Right Column: 円グラフエリア */}\r\n                    <Col md={6} className=\"mb-4\">\r\n                        <div className=\"bg-dark p-3 rounded shadow\">\r\n                            <h4 className=\"mb-3\">ポモドーロタイマー</h4>\r\n                            <PomodoroTimer />\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default TimeManager\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["ButtonGroup","bsPrefix","size","vertical","className","role","as","Component","rest","ref","prefix","baseClass","displayName","getPercentage","now","min","max","percentage","Math","round","renderProgressBar","label","visuallyHidden","striped","animated","style","variant","props","width","children","ProgressBar","isChild","wrapperProps","child","cloneElement","STORAGE_KEY","PomodoroTimer","seconds","setSeconds","useState","totalSeconds","setTotalSeconds","isRunning","setIsRunning","isPaused","setIsPaused","completedSessions","setCompletedSessions","dropdownVisible","setDropdownVisible","intervalRef","useRef","notifyLabelRef","saveToStorage","data","localStorage","setItem","JSON","stringify","startInterval","current","clearInterval","setInterval","prev","next","window","safeAPI","notify","Notification","permission","body","icon","requestPermission","then","perm","alert","c","removeItem","initializeTimer","duration","startedAt","Date","useEffect","closeDropdown","e","target","closest","document","addEventListener","removeEventListener","restoreFromStorage","saved","getItem","parse","elapsed","floor","remaining","React","Form","Group","controlId","Label","Control","type","defaultValue","id","sec","String","padStart","Button","onClick","handleStart","_document$getElementB","minutes","parseInt","getElementById","value","isNaN","handleBreak","handlePause","newPaused","_toConsumableArray","Array","map","_","i","key","display","height","borderRadius","backgroundColor","_ref","workSeconds","breakSeconds","svgRef","color","svg","d3","selectAll","remove","radius","pie","d","sort","arc","innerRadius","outerRadius","g","append","attr","enter","centroid","text","getTodayKey","toISOString","split","WorkTimer","mode","setMode","dailyTime","setDailyTime","work","break","parsed","additional","updated","startTimer","newMode","toFixed","PieChart","TimeManager","Layout","Container","fluid","Row","Col","md","suffix","decoratedBsPrefix","breakpoints","minBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push"],"sourceRoot":""}