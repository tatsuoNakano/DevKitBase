{"version":3,"file":"component---src-pages-maindmap-tsx-c35e42d502cd38bfb244.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/Container.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/Row.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/CardBody.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/CardFooter.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/CardHeaderContext.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/CardImg.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/CardImgOverlay.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/CardLink.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/CardSubtitle.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/CardText.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/CardTitle.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/Card.js","webpack://gatsby-starter-default/./src/pages/maindmap.tsx"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React, { useEffect, useRef, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { Button, Form, Card, Container, Row, Col } from \"react-bootstrap\";\r\nimport Layout from \"../components/Common/Layout\";\r\n\r\ninterface NodeData {\r\n    id: string;\r\n    name: string;\r\n    parent: string | null;\r\n}\r\n\r\nconst LOCAL_STORAGE_KEY = \"mindmap-nodes\";\r\n\r\nconst MaindMap: React.FC = () => {\r\n    const [nodes, setNodes] = useState<NodeData[]>([{\r\n        id: \"root\", name: \"Root\", parent: null\r\n    }]);\r\n    const [name, setName] = useState(\"\");\r\n    const [parent, setParent] = useState(\"root\");\r\n    const svgRef = useRef<SVGSVGElement | null>(null);\r\n    const tooltipRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    useEffect(() => {\r\n        const saved = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n        if (saved) {\r\n            try {\r\n                const parsed = JSON.parse(saved);\r\n                if (Array.isArray(parsed)) {\r\n                    setNodes(parsed);\r\n                }\r\n            } catch (e) {\r\n                console.error(\"Failed to parse localStorage data\", e);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(nodes));\r\n    }, [nodes]);\r\n\r\n    const addNode = () => {\r\n        if (!name.trim()) return;\r\n        const newNode: NodeData = {\r\n            id: `${Date.now()}`,\r\n            name,\r\n            parent,\r\n        };\r\n        setNodes([...nodes, newNode]);\r\n        setName(\"\");\r\n    };\r\n\r\n    const deleteNode = (id: string) => {\r\n        const filtered = nodes.filter(\r\n            (node) => node.id !== id && node.parent !== id\r\n        );\r\n        setNodes(filtered);\r\n    };\r\n\r\n    const reset = () => {\r\n        setNodes([{ id: \"root\", name: \"Root\", parent: null }]);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!svgRef.current || !tooltipRef.current) return;\r\n\r\n        const width = window.innerWidth;\r\n        const height = 800;\r\n\r\n        const svg = d3.select(svgRef.current);\r\n        svg.selectAll(\"*\").remove();\r\n\r\n        const tooltip = d3.select(tooltipRef.current);\r\n\r\n        const safeNodes = nodes.filter(\r\n            (node) => node.parent === null || nodes.find((n) => n.id === node.parent)\r\n        );\r\n\r\n        try {\r\n            const stratify = d3\r\n                .stratify<NodeData>()\r\n                .id((d) => d.id)\r\n                .parentId((d) => d.parent || undefined);\r\n\r\n            const root = stratify(safeNodes);\r\n            const treeLayout = d3.tree<NodeData>().size([width - 100, height - 100]);\r\n            treeLayout(root);\r\n\r\n            const g = svg.append(\"g\").attr(\"transform\", \"translate(50,50)\");\r\n\r\n            g.selectAll(\"line\")\r\n                .data(root.links())\r\n                .join(\"line\")\r\n                .attr(\"stroke\", \"#aaa\")\r\n                .attr(\"x1\", (d) => d.source.x)\r\n                .attr(\"y1\", (d) => d.source.y)\r\n                .attr(\"x2\", (d) => d.target.x)\r\n                .attr(\"y2\", (d) => d.target.y);\r\n\r\n            const node = g\r\n                .selectAll(\"g.node\")\r\n                .data(root.descendants())\r\n                .join(\"g\")\r\n                .attr(\"transform\", (d) => `translate(${d.x},${d.y})`);\r\n\r\n            node\r\n                .append(\"circle\")\r\n                .attr(\"r\", 20)\r\n                .attr(\"fill\", \"#0d6efd\")\r\n                .on(\"mouseenter\", (event, d) => {\r\n                    tooltip.style(\"display\", \"block\").text(d.data.name);\r\n                })\r\n                .on(\"mousemove\", (event) => {\r\n                    tooltip\r\n                        .style(\"left\", event.pageX + 10 + \"px\")\r\n                        .style(\"top\", event.pageY + 10 + \"px\");\r\n                })\r\n                .on(\"mouseleave\", () => {\r\n                    tooltip.style(\"display\", \"none\");\r\n                });\r\n\r\n            node\r\n                .append(\"text\")\r\n                .text((d) => d.data.name)\r\n                .attr(\"dy\", 5)\r\n                .attr(\"x\", 0)\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .attr(\"fill\", \"white\");\r\n        } catch (error) {\r\n            console.error(\"stratify error:\", error);\r\n        }\r\n    }, [nodes]);\r\n\r\n    return (\r\n        <Layout>\r\n            <div style={{ backgroundColor: \"#121212\", color: \"#ffffff\", paddingBottom: \"2rem\" }}>\r\n                <div\r\n                    ref={tooltipRef}\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        background: \"#333\",\r\n                        color: \"#fff\",\r\n                        padding: \"5px 10px\",\r\n                        borderRadius: \"4px\",\r\n                        pointerEvents: \"none\",\r\n                        fontSize: \"0.9rem\",\r\n                        display: \"none\",\r\n                        zIndex: 1000,\r\n                    }}\r\n                />\r\n\r\n                <div className=\"my-3\">\r\n                    <svg\r\n                        ref={svgRef}\r\n                        width=\"100%\"\r\n                        height=\"800\"\r\n                        style={{ backgroundColor: \"#1e1e1e\", border: \"1px solid #444\" }}\r\n                    />\r\n                </div>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Card bg=\"dark\" text=\"light\" className=\"mb-3\">\r\n                                <Card.Body>\r\n                                    <Form>\r\n                                        <Form.Group className=\"mb-2\">\r\n                                            <Form.Label>ノード名</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                value={name}\r\n                                                onChange={(e) => setName(e.target.value)}\r\n                                                placeholder=\"例：アイデアA\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"mb-2\">\r\n                                            <Form.Label>親ノード</Form.Label>\r\n                                            <Form.Select\r\n                                                value={parent}\r\n                                                onChange={(e) => setParent(e.target.value)}\r\n                                            >\r\n                                                {nodes.map((node) => (\r\n                                                    <option key={node.id} value={node.id}>\r\n                                                        {node.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Form.Select>\r\n                                        </Form.Group>\r\n                                        <div className=\"d-flex gap-2\">\r\n                                            <Button variant=\"primary\" onClick={addNode}>\r\n                                                追加\r\n                                            </Button>\r\n                                            <Button variant=\"danger\" onClick={reset}>\r\n                                                オールリセット\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Form>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <h5>ノード一覧</h5>\r\n                            <ul className=\"list-group\">\r\n                                {nodes\r\n                                    .filter((node) => node.id !== \"root\")\r\n                                    .map((node) => (\r\n                                        <li\r\n                                            key={node.id}\r\n                                            className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n                                        >\r\n                                            {node.name}\r\n                                            <Button\r\n                                                variant=\"outline-danger\"\r\n                                                size=\"sm\"\r\n                                                onClick={() => deleteNode(node.id)}\r\n                                            >\r\n                                                削除\r\n                                            </Button>\r\n                                        </li>\r\n                                    ))}\r\n                            </ul>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default MaindMap;\r\n"],"names":["Container","bsPrefix","fluid","as","Component","className","props","ref","prefix","suffix","displayName","Row","decoratedBsPrefix","breakpoints","minBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push","CardBody","CardFooter","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","CardImg","variant","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","LOCAL_STORAGE_KEY","MaindMap","nodes","setNodes","useState","id","name","parent","setName","setParent","svgRef","useRef","tooltipRef","useEffect","saved","localStorage","getItem","parsed","JSON","parse","Array","isArray","e","console","error","setItem","stringify","current","width","window","innerWidth","svg","d3","selectAll","remove","tooltip","safeNodes","filter","node","find","n","root","d","parentId","undefined","stratify","size","height","treeLayout","g","append","attr","data","links","join","source","x","y","target","descendants","on","event","style","pageX","pageY","React","Layout","backgroundColor","color","paddingBottom","position","background","padding","borderRadius","pointerEvents","fontSize","display","zIndex","Col","md","Form","Group","Label","Control","type","onChange","placeholder","Select","map","key","Button","onClick","addNode","trim","newNode","Date","now","concat","_toConsumableArray","reset","filtered","deleteNode"],"sourceRoot":""}