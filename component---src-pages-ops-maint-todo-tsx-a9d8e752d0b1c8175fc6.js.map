{"version":3,"file":"component---src-pages-ops-maint-todo-tsx-a9d8e752d0b1c8175fc6.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/ops-maint-todo.tsx","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/Feedback.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormContext.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormCheckInput.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormCheckLabel.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormCheck.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormControl.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormFloating.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormGroup.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormLabel.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormRange.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormSelect.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormText.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/Switch.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FloatingLabel.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/Form.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/ElementChildren.js","webpack://gatsby-starter-default/./node_modules/warning/warning.js"],"sourcesContent":["// pages/todo.tsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TodoListWithMarkdownExport from \"../components/Todo/TodoList\";\r\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\r\nimport Layout from \"../components/Common/Layout\";\r\n\r\nconst CATEGORY_NAME_KEY = \"operation-maintenance-category-names\"; // 表示名用\r\n\r\nconst OpsMaintTodo: React.FC = () => {\r\n    const [categoryNames, setCategoryNames] = useState<string[]>([\"\", \"\", \"\", \"\"]);\r\n\r\n    useEffect(() => {\r\n        const stored = localStorage.getItem(CATEGORY_NAME_KEY);\r\n        if (stored) {\r\n            try {\r\n                const parsed = JSON.parse(stored);\r\n                if (Array.isArray(parsed) && parsed.length === 4) {\r\n                    setCategoryNames(parsed);\r\n                }\r\n            } catch (e) {\r\n                console.error(\"カテゴリ名の読み込み失敗:\", e);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const handleCategoryNameChange = (index: number, newName: string) => {\r\n        const updated = [...categoryNames];\r\n        updated[index] = newName;\r\n        setCategoryNames(updated);\r\n        localStorage.setItem(CATEGORY_NAME_KEY, JSON.stringify(updated));\r\n    };\r\n\r\n    return (\r\n        <Layout>\r\n            <Container fluid className=\"bg-black text-light min-vh-100 p-4\">\r\n                <Row>\r\n                    {[0, 1, 2, 3].map((index) => (\r\n                        <Col key={index} md={3} className=\"mb-4\">\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder={`カテゴリ ${index + 1}`}\r\n                                value={categoryNames[index]}\r\n                                onChange={(e) => handleCategoryNameChange(index, e.target.value)}\r\n                                className=\"text-center mb-2 bg-dark text-info border-info\"\r\n                            />\r\n                            {/* storageKeyは不変にすることで内容が消えないようにする */}\r\n                            <TodoListWithMarkdownExport storageKey={`ops-${index + 1}`} />\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            </Container>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default OpsMaintTodo;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["CATEGORY_NAME_KEY","OpsMaintTodo","categoryNames","setCategoryNames","useState","useEffect","stored","localStorage","getItem","parsed","JSON","parse","Array","isArray","length","e","console","error","React","Layout","Container","fluid","className","Row","map","index","Col","key","md","Form","Control","type","placeholder","value","onChange","handleCategoryNameChange","newName","updated","_toConsumableArray","setItem","stringify","target","TodoListWithMarkdownExport","storageKey","propTypes","tooltip","as","Feedback","Component","props","ref","displayName","FormCheckInput","id","bsPrefix","isValid","isInvalid","controlId","useContext","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","reverse","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","input","Provider","Object","assign","Input","Label","FormControl","size","htmlSize","plaintext","readOnly","FormFloating","FormGroup","context","FormLabel","column","visuallyHidden","columnClass","classes","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","_ref","validated","Group","Floating","Check","Text","Range","Select","func","child","hasChildOfType","toArray","some","warning","module","exports"],"sourceRoot":""}