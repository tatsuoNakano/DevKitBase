{"version":3,"file":"component---src-pages-memo-tsx-61b91f9950ceac4dd090.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/ButtonGroup.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/Col.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/Container.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/Row.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/Feedback.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormContext.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormCheckInput.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormCheckLabel.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormCheck.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormControl.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormFloating.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormGroup.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormLabel.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormRange.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormSelect.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FormText.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/Switch.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/FloatingLabel.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/Form.js","webpack://gatsby-starter-default/./src/components/Memo/MemoTextInput.tsx","webpack://gatsby-starter-default/./src/components/Memo/FooterButtons.tsx","webpack://gatsby-starter-default/./src/components/Memo/MemoFooter.tsx","webpack://gatsby-starter-default/./src/pages/memo.tsx","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/ElementChildren.js","webpack://gatsby-starter-default/./node_modules/warning/warning.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical = false,\n  className,\n  role = 'group',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, {\n    ...rest,\n    ref: ref,\n    role: role,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nexport default ButtonGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import React, {\r\n    useImperativeHandle,\r\n    useRef,\r\n    useState,\r\n    useEffect,\r\n    forwardRef,\r\n} from \"react\"\r\nimport { Form, Container, Row, Col } from \"react-bootstrap\"\r\n\r\nexport type MemoTextInputHandle = {\r\n    insertAtCursor: (text: string) => void\r\n    getText: () => string\r\n    clearText: () => void\r\n    setText: (text: string) => void\r\n}\r\n\r\ninterface MemoTextInputProps {\r\n    defaultValue?: string\r\n    onChange?: () => void\r\n}\r\n\r\nconst MemoTextInput = forwardRef<MemoTextInputHandle, MemoTextInputProps>(\r\n    ({ defaultValue = \"\", onChange }, ref) => {\r\n        const [text, setText] = useState(defaultValue)\r\n        const textAreaRef = useRef<HTMLTextAreaElement>(null)\r\n\r\n        useEffect(() => {\r\n            setText(defaultValue)\r\n        }, [defaultValue])\r\n\r\n        useImperativeHandle(ref, () => ({\r\n            insertAtCursor: (insertText: string) => {\r\n                const textarea = textAreaRef.current\r\n                if (!textarea) return\r\n                const start = textarea.selectionStart\r\n                const end = textarea.selectionEnd\r\n                const updated =\r\n                    text.substring(0, start) +\r\n                    insertText +\r\n                    text.substring(end)\r\n                setText(updated)\r\n                setTimeout(() => {\r\n                    textarea.selectionStart = textarea.selectionEnd =\r\n                        start + insertText.length\r\n                    textarea.focus()\r\n                }, 0)\r\n            },\r\n            getText: () => text,\r\n            clearText: () => setText(\"\"),\r\n            setText: (newText: string) => setText(newText),\r\n        }))\r\n\r\n        const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n            setText(e.target.value)\r\n            onChange?.()\r\n        }\r\n\r\n        return (\r\n            <Container>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col md={12}>\r\n                        <Form>\r\n                            <Form.Group controlId=\"memoTextArea\">\r\n                                <Form.Label className=\"text-light\">\r\n                                    メモを入力\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    ref={textAreaRef}\r\n                                    as=\"textarea\"\r\n                                    rows={20}\r\n                                    value={text}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Markdown形式でメモを記述...\"\r\n                                    className=\"bg-dark text-light border-secondary\"\r\n                                    style={{\r\n                                        resize: \"none\",\r\n                                        height: \"calc(100vh - 200px)\",\r\n                                    }}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n)\r\n\r\nexport default MemoTextInput\r\n","// /src/components/Memo/FooterButtons.tsx\r\nimport React from \"react\"\r\nimport { Button, ButtonGroup } from \"react-bootstrap\"\r\n\r\ntype FooterButtonsProps = {\r\n    onInsert: (syntax: string) => void\r\n    onDownload: () => void\r\n    onClear: () => void\r\n}\r\n\r\nconst FooterButtons: React.FC<FooterButtonsProps> = ({\r\n                                                         onInsert,\r\n                                                         onDownload,\r\n                                                         onClear,\r\n                                                     }) => {\r\n    const buttonStyle = { minWidth: \"70px\", marginRight: \"4px\" }\r\n\r\n    return (\r\n        <ButtonGroup>\r\n            <Button variant=\"outline-light\" style={buttonStyle} onClick={() => onInsert(\"# \")}>#</Button>\r\n            <Button variant=\"outline-light\" style={buttonStyle} onClick={() => onInsert(\"## \")}>##</Button>\r\n            <Button variant=\"outline-light\" style={buttonStyle} onClick={() => onInsert(\"### \")}>###</Button>\r\n            <Button variant=\"outline-light\" style={buttonStyle} onClick={() => onInsert(\"* \")}>*</Button>\r\n            <Button variant=\"outline-light\" style={buttonStyle} onClick={() => onInsert(\"[リンクテキスト](URL)\")}>\r\n                <i className=\"bi bi-link-45deg\" />\r\n            </Button>\r\n            <Button variant=\"outline-light\" style={buttonStyle} onClick={() => onInsert(\"```\\nコード\\n```\")}>```</Button>\r\n            <Button variant=\"outline-light\" style={buttonStyle} onClick={onDownload}>\r\n                DL\r\n            </Button>\r\n            <Button variant=\"outline-danger\" style={buttonStyle} onClick={onClear}>\r\n                <i className=\"bi bi-trash3\" />リセット\r\n            </Button>\r\n        </ButtonGroup>\r\n    )\r\n}\r\n\r\nexport default FooterButtons\r\n","// /src/components/Memo/MemoFooter.tsx\r\nimport React from \"react\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport FooterButtons from \"./FooterButtons\"\r\n\r\ntype Props = {\r\n    onInsert: (text: string) => void\r\n    onDownload: () => void\r\n    onTitleInput: () => void\r\n    onClear: () => void\r\n}\r\n\r\nconst MemoFooter: React.FC<Props> = ({ onInsert, onDownload, onTitleInput, onClear }) => {\r\n    return (\r\n        <div\r\n            className=\"w-100 bg-dark text-light d-flex align-items-center\"\r\n            style={{\r\n                position: \"fixed\",\r\n                bottom: 0,\r\n                left: 0,\r\n                height: \"100px\",\r\n                zIndex: 1040,\r\n                boxShadow: \"0 -2px 4px rgba(0,0,0,0.4)\",\r\n                padding: \"1rem 2rem\",\r\n            }}\r\n        >\r\n            <Container className=\"d-flex justify-content-center align-items-center flex-wrap gap-2\">\r\n                <FooterButtons\r\n                    onInsert={onInsert}\r\n                    onDownload={onDownload}\r\n                    onTitleInput={onTitleInput}\r\n                    onClear={onClear}\r\n                />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemoFooter\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\nimport Layout from \"../components/Common/Layout\"\r\nimport MemoTextInput, { MemoTextInputHandle } from \"../components/Memo/MemoTextInput\"\r\nimport MemoFooter from \"../components/Memo/MemoFooter\"\r\n\r\nconst LOCAL_STORAGE_KEY = \"memoText\"\r\n\r\nconst MemoPage: React.FC = () => {\r\n    const inputRef = useRef<MemoTextInputHandle>(null)\r\n    const [title, setTitle] = useState(\"memo\")\r\n    const [initialText, setInitialText] = useState(\"\")\r\n\r\n    // 初回に localStorage から復元して初期値として渡す\r\n    useEffect(() => {\r\n        const saved = localStorage.getItem(LOCAL_STORAGE_KEY)\r\n        if (saved) {\r\n            setInitialText(saved)\r\n        }\r\n    }, [])\r\n\r\n    const handleAutoSave = () => {\r\n        const currentText = inputRef.current?.getText() || \"\"\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, currentText)\r\n    }\r\n\r\n    const handleInsert = (text: string) => {\r\n        inputRef.current?.insertAtCursor(text)\r\n        handleAutoSave()\r\n    }\r\n\r\n    const handleDownload = () => {\r\n        const text = inputRef.current?.getText() || \"\"\r\n        const blob = new Blob([text], { type: \"text/markdown;charset=utf-8\" })\r\n        const url = URL.createObjectURL(blob)\r\n        const a = document.createElement(\"a\")\r\n        a.href = url\r\n        a.download = `${title || \"memo\"}.md`\r\n        a.click()\r\n        URL.revokeObjectURL(url)\r\n    }\r\n\r\n    const handleClear = () => {\r\n        inputRef.current?.clearText()\r\n        localStorage.removeItem(LOCAL_STORAGE_KEY)\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"container mt-4 mb-5\">\r\n                <MemoTextInput\r\n                    ref={inputRef}\r\n                    onChange={handleAutoSave}\r\n                    defaultValue={initialText} // ← 追加\r\n                />\r\n            </div>\r\n            <MemoFooter\r\n                onInsert={handleInsert}\r\n                onDownload={handleDownload}\r\n                onClear={handleClear}\r\n            />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default MemoPage\r\n","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["ButtonGroup","bsPrefix","size","vertical","className","role","as","Component","rest","ref","prefix","baseClass","displayName","Col","props","colProps","spans","breakpoints","minBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","push","useCol","length","Container","fluid","suffix","Row","decoratedBsPrefix","sizePrefix","cols","propTypes","type","tooltip","Feedback","FormCheckInput","id","isValid","isInvalid","controlId","useContext","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","reverse","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","input","Provider","value","Object","assign","Input","Label","FormControl","htmlSize","plaintext","readOnly","FormFloating","FormGroup","context","FormLabel","column","visuallyHidden","columnClass","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","_ref","validated","Form","Group","Control","Floating","Check","Text","Range","Select","forwardRef","defaultValue","onChange","text","setText","useState","textAreaRef","useRef","useEffect","useImperativeHandle","insertAtCursor","insertText","textarea","current","start","selectionStart","end","selectionEnd","updated","substring","setTimeout","focus","getText","clearText","newText","React","md","rows","e","target","placeholder","resize","height","onInsert","onDownload","onClear","buttonStyle","minWidth","marginRight","Button","variant","onClick","onTitleInput","position","bottom","left","zIndex","boxShadow","padding","FooterButtons","LOCAL_STORAGE_KEY","MemoPage","inputRef","setTitle","initialText","setInitialText","saved","localStorage","getItem","handleAutoSave","_inputRef$current","currentText","setItem","Layout","MemoTextInput","MemoFooter","_inputRef$current2","handleDownload","_inputRef$current3","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleClear","_inputRef$current4","removeItem","map","func","index","child","hasChildOfType","toArray","some","warning","module","exports"],"sourceRoot":""}